Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b49dd498-1f13-49b9-82ab-d87af5bafa87\" name=\"Changes\" comment=\"field completed\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"KEEP\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2ZUTmzKPWX7ojOHCOolsw8fVyyM\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"full.screen.before.presentation.mode\": \"false\",\r\n    \"last_opened_file_path\": \"C:/lombok.jar\",\r\n    \"project.structure.last.edited\": \"Libraries\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"SnakeJava\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b49dd498-1f13-49b9-82ab-d87af5bafa87\" name=\"Changes\" comment=\"\" />\r\n      <created>1702475822046</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702475822046</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۰۱\" summary=\"first getting experience\">\r\n      <created>1703400110644</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۰۱\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۰۱\" />\r\n      <updated>1703400110644</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۰۲\" summary=\"class creation\">\r\n      <created>1703402458989</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۰۲\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۰۲\" />\r\n      <updated>1703402458989</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۰۳\" summary=\"panel creating\">\r\n      <created>1703423817624</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۰۳\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۰۳\" />\r\n      <updated>1703423817624</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E۰۰۰۰۴\" summary=\"field completed\">\r\n      <created>1703426253078</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E۰۰۰۰۴\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E۰۰۰۰۴\" />\r\n      <updated>1703426253078</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"BEK_SORT_TYPE\" value=\"1\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first getting experience\" />\r\n    <MESSAGE value=\"class creation\" />\r\n    <MESSAGE value=\"panel creating\" />\r\n    <MESSAGE value=\"field completed\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"field completed\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -2,7 +2,9 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="b49dd498-1f13-49b9-82ab-d87af5bafa87" name="Changes" comment="field completed">
+      <change afterPath="$PROJECT_DIR$/src/MoveSnake.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GamePanel.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -41,7 +43,7 @@
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "full.screen.before.presentation.mode": "false",
-    "last_opened_file_path": "C:/lombok.jar",
+    "last_opened_file_path": "C:/Users/Public/src/src/com/company/Calculator1",
     "project.structure.last.edited": "Libraries",
     "project.structure.proportion": "0.0",
     "project.structure.side.proportion": "0.2",
@@ -105,13 +107,12 @@
         <entry key="MAIN">
           <value>
             <State>
-              <option name="BEK_SORT_TYPE" value="1" />
               <option name="FILTERS">
                 <map>
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="master" />
+                        <option value="HEAD" />
                       </list>
                     </value>
                   </entry>
Index: src/GamePanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.Random;\r\n\r\npublic class GamePanel extends JPanel implements ActionListener {\r\n\r\n    final int UNIT_SIZE = 30;\r\n    final int HEADER_HEIGHT = 30;\r\n    boolean running = true;//the mood the game playing or not\r\n    int delay = 75;\r\n    char direction = 'R';//'R' right , 'L' left , 'U' up , 'D' down\r\n    Timer timer;\r\n    Random random;\r\n    \r\n    \r\n    //**********************  panel *****************************\r\n    //the hole panel that contains name score or field\r\n    int panelWidth = 600;\r\n    int panelHeight = 600 + HEADER_HEIGHT;\r\n    Color panelBackGroundColor = new Color(0x001219);\r\n\r\n    //**********************  field  *****************************\r\n    //the map that snake or apples would enter\r\n    int fieldWidth = panelWidth;\r\n    int fieldHeight = panelHeight - HEADER_HEIGHT;//because I want to have header to say details\r\n    Color snakeHeadColor = new Color(0x386641);\r\n    Color snakeBodyColor = new Color(0xA7C957);\r\n    final int GAME_UNITS = (fieldWidth * fieldHeight) / UNIT_SIZE;//hoe many unit that we can play there\r\n    //**********************  SNAKE   *****************************\r\n    int bodyPart = 3;//we start the game with 3 part as default and initial snake\r\n    int x[] = new int[GAME_UNITS];//we use GAME_UNITS because it is feild capcity to hold the biggest snake\r\n    int y[] = new int[GAME_UNITS];//,,\r\n    \r\n    //**********************  apples   *****************************\r\n    int applesEaten;\r\n    int appleX;\r\n    int appleY;\r\n    Color applesColor = new Color(0x9A031E);\r\n\r\n\r\n\r\n\r\n    GamePanel() {\r\n        random = new Random();\r\n        this.setPreferredSize(new Dimension(panelWidth,panelHeight));\r\n        this.setBackground(panelBackGroundColor);\r\n        this.setFocusable(true);\r\n        //this.addKeyListener(this);    //when you creating keyAdapter use this\r\n\r\n        startGame();\r\n\r\n        System.out.println(\"GamePanel done!!!\");\r\n    }\r\n\r\n    public void startGame(){\r\n        running = true;\r\n        newApples();\r\n        timer = new Timer(delay,this);//how fast we want to be\r\n        timer.start();\r\n\r\n\r\n    }\r\n\r\n    public void PaintComponent(Graphics g){\r\n        super.paintComponent(g);\r\n        draw(g);\r\n\r\n        System.out.println(\" PaintComponent() done!!!\");\r\n    }\r\n\r\n    public void draw(Graphics g){\r\n        //preparing panel to be gridded for making easier to make tht hapen\r\n        for (int i = 0; i < fieldWidth/UNIT_SIZE; i++ ) {\r\n            g.drawLine(i * UNIT_SIZE,HEADER_HEIGHT , i * UNIT_SIZE, fieldHeight);\r\n\r\n            g.drawLine(0,(i * UNIT_SIZE) + HEADER_HEIGHT , fieldWidth,\r\n                    (i * UNIT_SIZE) + HEADER_HEIGHT);\r\n        }\r\n        System.out.println(\"draw() done!!!\");\r\n    }\r\n\r\n    public void checkApple(){\r\n\r\n    }\r\n    public void newApples(){\r\n\r\n\r\n    }\r\n\r\n    public void checkCollisions(){\r\n\r\n    }\r\n\r\n    public void gameOver (){\r\n\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/GamePanel.java b/src/GamePanel.java
--- a/src/GamePanel.java	
+++ b/src/GamePanel.java	
@@ -47,6 +47,7 @@
         this.setPreferredSize(new Dimension(panelWidth,panelHeight));
         this.setBackground(panelBackGroundColor);
         this.setFocusable(true);
+        this.addKeyListener(new MoveSnake());
         //this.addKeyListener(this);    //when you creating keyAdapter use this
 
         startGame();
@@ -64,7 +65,7 @@
     }
 
     public void PaintComponent(Graphics g){
-        super.paintComponent(g);
+        super.paint(g);
         draw(g);
 
         System.out.println(" PaintComponent() done!!!");
@@ -73,8 +74,10 @@
     public void draw(Graphics g){
         //preparing panel to be gridded for making easier to make tht hapen
         for (int i = 0; i < fieldWidth/UNIT_SIZE; i++ ) {
+            g.setColor(new Color(0xFFFFFF));
             g.drawLine(i * UNIT_SIZE,HEADER_HEIGHT , i * UNIT_SIZE, fieldHeight);
 
+            g.setColor(new Color(0xFFFFFF));
             g.drawLine(0,(i * UNIT_SIZE) + HEADER_HEIGHT , fieldWidth,
                     (i * UNIT_SIZE) + HEADER_HEIGHT);
         }
@@ -99,6 +102,8 @@
 
     @Override
     public void actionPerformed(ActionEvent e) {
-
+        //if you sout here every second the statement would execute
+        //so have statement that you want to check every time like parallel string
+        //
     }
 }
